{
  "name": "grunt-glue-nu",
  "description": "Create sprites automatically with Glue, but the grunt way!",
  "version": "0.1.0",
  "homepage": "https://github.com/MarcDiethelm/grunt-glue-nu",
  "author": {
    "name": "Marc Diethelm",
    "email": "marc@web5.me"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/MarcDiethelm/grunt-glue-nu.git"
  },
  "bugs": {
    "url": "https://github.com/MarcDiethelm/grunt-glue-nu/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/MarcDiethelm/grunt-glue-nu/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test --debug"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1",
    "grunt-mocha-cli": "~1.3.0"
  },
  "keywords": [
    "gruntplugin",
    "glue",
    "sprites",
    "spriting",
    "retina"
  ],
  "dependencies": {
    "wrench": "~1.5.4"
  },
  "readme": "# grunt-glue-nu\n\n> Create sprites automatically with Glue, but the Grunt.js way!\n\nThis [Grunt](http://gruntjs.com/) plugin wraps and enhances the [Glue](https://github.com/jorgebastida/glue) command line\nspriting tool. It's built as a Grunt [multiTask](http://gruntjs.com/configuring-tasks#task-configuration-and-targets)\nthat supports extensible task and target-specific options, multiple source locations per target, globbing and so on.\n\nEvery task target results in one sprite 'bundle', consisting of the sprite sheet PNG image and a style sheet.\nAll of Glue's command line [options](http://glue.readthedocs.org/en/latest/options.html) are supported through the\noptions, adding some sensible defaults in order to minimize the need for configuration.\n\nGlue supports .less style sheet output.\n\n**☞** Jump to [Usage](#using-the-glue-task)\n\ngrunt-glue-nu also allows you to send the argument to glue as a string, bypassing the plugin logic. Meaning you can\nmigrate to this plugin quickly and sort things out later. Or dodge bugs, should the need arise.\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-glue-nu --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-glue-nu');\n```\n\n\n### Using the glue task\n\nIn your project's Gruntfile, add a section named `glue` to the data object passed into `grunt.initConfig()`. This\nsection is called a task.\n\n*Minimal config*: You must specify the task target's `src` and `dest` properties.\nThe file names of the sprite bundle and the sprite namespace will then be the same as the task target. You can change\nany aspect of that through the options of course.\n\n```js\ngrunt.initConfig({\n\tglue: {\n\t\toptions: {\n\t\t\t// Task-specific options go here.\n\t\t},\n\t\t// Target-specific file lists and/or options go here.\n\t\tyour_target: {\n\t\t\t src: ['path/to/sprites/'],\n\t\t\t dest: 'output/folder/'\n\t\t}\n\t}\n});\n```\n\nWhen setting up or troubleshooting a task it's always a good idea to run grunt with the `--debug` option to see\ninformation such as the resulting exact arguments used with the `glue` command and which files and folder are being\nprocessed by Glue.\n\n### Options\n\n**You can pass [any command line options supported by glue](http://glue.readthedocs.org/en/latest/options.html) as task\nand/or target options.**\n\nIn addition grunt-glue-nu has a few configuration options that are not passed on to glue.\n\n- **options.bundleName** `{String} task:target` – The file names of the files created for the sprite bundle. By default they are the same as the task target name.\n\n- **options.tmpDir** `{String} require('os').tmpdir()` – A temporary source folder for glue to operate in. By default it's your OS's temp directory.\n\n- **options.glueArgs** `{Boolean} false` – Use `glueArgs` to set all arguments to the `glue` command manually as a string. All `options`, `src` and `dest` are\n\tthen ignored for this target. \n\n\n#### Default options for Glue\n\ngrunt-glue-nu sets some defaults for glue options that are deemed helpful.\n\n```js\ncss       : dest dir          // Write the sprite style sheet in your supplied dest\nimg       : dest dir          // Write the sprite sheet in your supplied dest\nrecursive : true              // process sprites in sub-folders\ncrop      : true              // crop sprites minimizing empty pixels\nforce     : true              // forces glue to execute even if it detects no changes in the input\ndebug     : true              // make glue return useful feedback\n```\n\nGlue by itself will exit with an error code if there are no images in the source folders. grunt-glue-nu catches that, prints a\nwarning and lets Grunt continue doing its job. \n\n### Longer usage example\n\n```js\ngrunt.initConfig({\n\tglue: {\n\t\toptions: {\n\t\t\tcss                : 'dist',\n\t\t\tless               : true,\n\t\t\turl                : '/static/img',\n\t\t\tnamespace          : 's',\n\t\t\t'sprite-namespace' : '',\n\t\t\tretina:            : true\n\t\t\toptipng            : true\n\t\t},\n\t\tbackgrounds: {\n\t\t\toptions: {\n\t\t\t\tretina: false\n\t\t\t},\n\t\t\tsrc: ['path/to/sprites/*.{png,jpg,conf}'],\n\t\t\tdest: 'output/folder/'\n\t\t},\n\t\ticons: {\n\t\t\toptions: {\n\t\t\t\t'sprite-namespace': 'icon'\n\t\t\t},\n\t\t\tsrc: ['path/to/sprites/*.png'],\n\t\t\tdest: 'output/folder/'\n\t\t},\n\t\tmodules: {\n\t\t\toptions: {\n\t\t\t\tbundleName: 'module'\n\t\t\t\t'sprite-namespace': ''\n\t\t\t},\n\t\t\tsrc: ['modules/carousel', 'modules/accordion'],\n\t\t\tdest: 'output/folder/'\n\t\t}\n\t}\n});\n```\n\n## Contributing\n[How to contribute to a project on Github](https://gist.github.com/MarcDiethelm/7303312)\n\n## Release History\nsee [CHANGELOG.md](CHANGELOG.md)\n\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-glue-nu@0.1.0",
  "dist": {
    "shasum": "8a89ef2f944069438a615b6a925171652ca4425f"
  },
  "_from": "grunt-glue-nu@",
  "_resolved": "https://registry.npmjs.org/grunt-glue-nu/-/grunt-glue-nu-0.1.0.tgz"
}
